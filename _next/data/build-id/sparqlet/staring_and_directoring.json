{"pageProps":{"meta":{"id":"staring_and_directoring","title":"監督と出演を兼ねた人の作品一覧","author":"ningensei848","topics":[],"published":true},"query":"\nPREFIX dbpj: <http://ja.dbpedia.org/resource/>\nPREFIX dbp-owl: <http://dbpedia.org/ontology/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT distinct ?film_name WHERE {\n ?film dbp-owl:director dbpj:{{name}};\n dbp-owl:starring dbpj:{{name}};\n rdfs:label ?film_name.\n} LIMIT 100\n","config":{"endpoint":"https://ja.dbpedia.org/sparql","form":[{"element":"auto","param":{"from":"list","name":"name","keywords":["ビートたけし","水谷豊","大泉洋","ディーン・フジオカ","斎藤工","竹中直人"]}}]},"content":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\"\n    }, props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: \"監督と出演を兼ねた人の作品一覧\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"\\\"オープンデータ時代の標準 Web API SPARQL\\\" の記述をもとにクエリを作成した\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n"},"__N_SSG":true}